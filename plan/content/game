# game
								Game
Game:
	abstract LinkedList<? extends MinimizedGamePlayer> getPlayers() // returnt alle Player, gebraucht in der MiniMap
	getDynamicEntities() returnt alle Entities, außer Tiles (Cosmetics, Players, Bullets)
	getPixelMapImage() // = Minimap without the Players
	getMapImage() // returnt die GameTileMap als ein Bild wie es im Spiel erscheint

ClientGame extends Game:
	private:
		List<MinimizedGamePlayer> players;
		ExtendedGamePlayerFrameUpdate localPlayerUpdate;
		final int localPlayerID;

	apply(GameFrameUpdatePacket)

ServerGame extends Game:
	private:
		List<ExtendedGamePlayer> players;
		ExtendedGamePlayerFrameUpdate getExtendedGamePlayerFrameUpdateByID(id) // needed for getGameFrameUpdatePacket(id)

	handleEvent(EventPacket, id)
	tick() lässt das Spiel weiterlaufen
	GameFrameUpdatePacket getGameFrameUpdatePacketByID(id) // id from ExtendedGamePlayerFrameUpdate of localPlayer

________________________________________________________________________________________________________________________________________________________________________________________________
								Packet
GameFrameUpdatePacket:
// Jeden Frame von Server zu Client gesendet
	List<MinimizedGamePlayerFrameUpdate> getPlayers()
	List<MinimizedBullet> getBullets()
	List<EventUpdatePacket> getEventUpdatePackets()
	ExtendedGamePlayerFrameUpdate getLocalExtendedGamePlayerFrameUpdate();

EventUpdatePacket:
// Ist im GameFrameUpdatePacket enthalten
// Muss nicht jeden Frame gesendet werden
// Unterklassen enthalten folgende Informationen: 
Unterklassen:
	- BreakableBlockEventUpdatePacket
	- KillEventUpdatePacket
	- CreateCosmeticsEventUpdatePacket
	- WinEventUpdatePacket

________________________________________________________________________________________________________________________________________________________________________________________________
								Game Interface
ClientGameInterface:
	-> render() // nutzt Game.getDynamicEntities()
	handlePacket(Packet) // -> ClientGame.update(CompressedGame, List<EventUpdatePacket>)
	onEvent(EventPacket) // -> ServerGameInterface.handlePacket

ServerGameInterface:
	-> render() // nutzt Game.getDynamicEntities()
	handlePacket() // -> ServerGame.handleEvent(EventPacket)
	onEvent(EventPacket) // -> ServerGame.handleEvent(EventPacket)

________________________________________________________________________________________________________________________________________________________________________________________________
								InGame Client-Server Data Exchange

* GameInterface.render() wird von MenuList ausgeführt. Die Verzögerung, weil nicht direkt nach dem recieven gerendert wird, wird akzeptiert.
* Client -> Server KeyStrokes/MouseEvents

________________________________________________________________________________________________________________________________________________________________________________________________
								InGame Server -> Client data transmission:

#################################################################################################################################################
#				#					#			#			# 			#
#	When    /  For		#	general				#	LocalPlayer	# 	allPlayers 	#	Plullets	#
#				#					#			#			# 			#
#################################################################################################################################################
#				#					-			-			- 			-
#				#	Map				-			-			- 			-
#	LobbyMenu		#	all LobbyPlayers		-			-			-			-
#				#	(Team, Avatar, Skills, 		-			-			-			-
#				#	Items, Name, rank)		-			-			-			-
#				#					-			-			- 			-
#################################----------------------------------------------------------------------------------------------------------------
#				#					-			-			- 			-
#				#					-	Effect Stats	-			-			-
#	Every Game Frame	#					-	Cooldown	-	Health		-	BodImage	-
#				#					-	PlayerStats	-			-			-
#				#					-			-			- 			-
#################################----------------------------------------------------------------------------------------------------------------
#				#					-			-			- 			-
#	onEvent			#	Kills, BBHealth, win	 	-			-			-	EffectOnOff	-
#				#	onCreateCosmetic		-			-			- 			-
#				#					-			-			- 			-
#################################----------------------------------------------------------------------------------------------------------------

