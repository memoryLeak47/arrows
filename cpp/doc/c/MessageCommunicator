# c/MessageCommunicator

ApproxDuration: ""
Sub.Listener: "c/MessageListener_Dispatcher"
DependsOn: "c/MessageSystem, c/EffectOnlyInEntity"

# Description
class MessageCommunicator : MessageListener {
	std::vector<Message*> messages
	Message* pollMessage() { return messages.pop(); }
	bool hasMessage() { return !messages.empty(); }
}
Entity, Skill, Item, Effect : MessageCommunicator

[c/Game: class Game; -- The superior modular unit]

The Game regularly polls the Messages of all Entities.
Entity::tick() ticks and then polls its skills, items and effects to it's own messages list.

When a message is broadcasted, the Game broadcasts it to the entities,
which then broadcast them farther to their Skills, Items and Effects.

So the Game and {Skills, Items, Effects} do not communicate directly with each other.

.Listener:
	Implementation of the class MessageListener
	A method to listen to specific types of messages without direct access to the message-transmitte


# Rating - Prediction
# Rating - Review
