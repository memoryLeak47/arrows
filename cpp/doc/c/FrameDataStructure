# c/FrameDataStructure

Sub.MessageSystem: "c/MessageSystem"
Sub?OutsideEntityAccess: "c/EntityPointer"
ApproxDuration: ""
DependsOn: "c/Entity"

# Description
class Frame;
class FrameHistory;

[c/Game: class Game; -- The superior modular unit]

All Entities are stored in frames.
A frame represents a moment in the game.

the class FrameHistory contains a list of Frames, which happened after each other.

The Game contains a `Frame mainFrame` and a `FrameHistory mainFrameHistory`.
A Frame is cloneable, by using the Frame::clone() function. This clones all stateful objects inside the frame, The stateless objects are preferably not cloned.
In Game::tick() the Game calls `mainFrame.tick()` and `mainFrameHistory.add(mainFrame.clone())` in a yet to be decided order.

.MessageSystem:
	A MessageSystem provides a way for the entities to give information to each other and to the Game.

?OutsideEntityAccess:
	Allows secure Entity-access from outside the frame-system, which is not invalidated by frame-cloning(, as a Entity* would).

# Rating - Prediction
# Rating - Review
