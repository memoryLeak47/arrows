# c/MessageListener_Dispatcher

Sub: "c/MessageListener_DispatcherListensTo, c/MessageListener_DispatcherOverride"
ApproxDuration: ""
DependsOn: "c/MessageSystem"

# Description
class MessageListener {
	void applyMessage(const <Sub>Message&)
};
Game : MessageListener;
Game { list<MessageListener*> listeners; };
Message {
	void applyTo(MessageListener* listener) { listener->applyMessage(*this); }
};

When polling the 'list<Message*> ms', the Game runs something like:
for (auto* m : ms) {
	m->applyTo(this);
	for (auto* l : listeners) {
		// if (l cares for m) {
			m->applyTo(l);
		// }
	}
}

[c/Game: class Game; -- The superior modular unit]

# Rating - Prediction
Cons:
	- Every Listener must be iterated for every Message.
Pros:
	- Only one Listener-List
# Rating - Review
